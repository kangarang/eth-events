{"version":3,"sources":["components/system/Box.tsx","components/ui/Button.tsx","components/system/Flex.tsx","components/ui/Input.tsx","components/ui/A.tsx","utils/format.ts","components/VisibleMethods.tsx","utils/localStorage.ts","components/ui/Field.tsx","components/Contracts.tsx","components/SwarmPlot.tsx","components/Events.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Box","styled","div","space","color","layout","typography","flexbox","border","background","shadow","position","displayName","StyledButton","button","Button","props","Flex","wrapReverse","wrap","justifyContent","justifyCenter","justifyAround","justifyBetween","justifyEnd","alignItems","alignStretch","alignEnd","alignCenter","alignBaseline","column","three","four","noPadding","StyledInput","input","TextArea","textarea","Input","type","onChange","e","handleChange","target","value","A","a","commifyBaseUnits","base","decimalDigits","floatingPt","point","indexOf","slice","sliceDecimals","utils","commify","formatUnits","fromBaseUnits","toSolidityTypes","methodAbi","map","typeAbi","name","join","formatMethodTypes","inputs","outputs","length","signature","nonNumRegex","sanitizeEvents","events","event","newValues","Object","keys","values","reduce","acc","eventArg","test","hasOwnProperty","toString","stringifySolidityValues","val","bigNumberify","formatTokens","methodName","includes","formatUts","Date","parseInt","toLocaleString","VisibleMethods","methods","methodType","contract","contractName","handleHideMethod","useState","visibility","setVisibility","setValues","method","toLowerCase","console","log","error","message","mb","onClick","key","fontSize","handleClick","loadState","storageKey","serializedState","localStorage","getItem","JSON","parse","err","saveState","state","stringify","setItem","Row","children","width","Field","label","inputComponent","visibilityFilter","hiddenMethods","filter","m","Contracts","setError","localAbis","setLocalAbis","contracts","setName","abi","setAbi","address","setAddress","setHiddenMethods","useEffect","savedHiddenMethods","className","p","mr","isEmpty","contractAbi","contractAddress","txsAbi","constant","callsAbi","eventsAbi","txs","calls","visibleCalls","visibleTxs","visibleEvents","pb","href","fontWeight","onSubmit","preventDefault","json","newLocalAbis","rows","cols","Wrapper","SwarmPlot","data","TokenCapacitor","id","txHash","logIndex","group","blockNumber","numTokens","sizes","layers","groups","valueScale","min","max","size","lt","forceStrength","simulationIterations","colors","scheme","borderColor","from","modifiers","margin","top","right","bottom","left","axisTop","orient","tickSize","tickPadding","tickRotation","axisRight","axisBottom","axisLeft","motionStiffness","motionDamping","Events","contractNames","setContractNames","setEvents","gk","Gatekeeper","tc","ps","ParameterStore","gatekeeper","interface","tokenCapacitor","parameterStore","contractObjects","infuraKey","process","INFURA_PROJECT_ID","rpcEndpoint","ignore","ethEvents","EthEvents","tcFilter","fromBlock","toBlock","topics","psFilter","getEventsByFilter","gkEvents","tcEvents","psEvents","orderedGk","sortBy","orderedTc","orderedPs","cleanGk","cleanTc","cleanPs","savedEvents","getEvents","App","setContracts","route","setRoute","persisted","window","ethereum","provider","providers","Web3Provider","cons","Contract","getSigner","bg","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f48f12e1.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport {\n  space,\n  color,\n  layout,\n  typography,\n  flexbox,\n  border,\n  background,\n  shadow,\n  position,\n} from 'styled-system';\n\nconst Box: any = styled.div`\n  min-width: 0;\n\n  ${space};\n  ${color};\n  ${layout};\n  ${typography};\n  ${flexbox};\n  ${border};\n  ${background}\n  ${shadow};\n  ${position};\n`;\n\nBox.displayName = 'Box';\n\nexport default Box;\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport { space, color, layout, typography, background, shadow } from 'styled-system';\n\nconst StyledButton: any = styled.button`\n  border: 1px solid black;\n  border-radius: 1px;\n  padding: 0.8rem 1.2rem;\n  font-size: 0.8rem;\n\n  color: black;\n  background-color: white;\n\n  ${space};\n  ${color};\n  ${layout};\n  ${typography};\n  ${background}\n  ${shadow};\n`;\n\nconst Button: any = (props: any) => {\n  return <StyledButton {...props} />;\n};\n\nButton.displayName = 'Button';\n\nexport default Button;\n","import styled from 'styled-components';\nimport {\n  space,\n  color,\n  layout,\n  typography,\n  border,\n  background,\n  shadow,\n  position,\n} from 'styled-system';\n\nconst Flex: any = styled.div`\n  display: flex;\n  flex-wrap: ${(props: any) => {\n    if (props.wrapReverse) return 'wrap-reverse';\n    else if (props.wrap) return 'wrap';\n    return 'nowrap';\n  }};\n  justify-content: ${(props: any) => {\n    if (props.justifyContent) return props.justifyContent;\n    if (props.justifyCenter) return 'center';\n    else if (props.justifyAround) return 'space-around';\n    else if (props.justifyBetween) return 'space-between';\n    else if (props.justifyEnd) return 'flex-end';\n    return 'flex-start';\n  }};\n  align-items: ${(props: any) => {\n    if (props.alignItems) return props.alignItems;\n    else if (props.alignStretch) return 'stretch';\n    else if (props.alignEnd) return 'flex-end';\n    if (props.alignCenter) return 'center';\n    else if (props.alignBaseline) return 'baseline';\n    return 'flex-start';\n  }};\n  flex-direction: ${(props: any) => (props.column ? 'column' : 'row')};\n\n  ${space};\n  ${color};\n  ${layout};\n  ${typography};\n  ${border};\n  ${background};\n  ${shadow};\n  ${position};\n`;\n\nexport const Column = styled.div`\n  width: ${(props: any) => {\n    if (props.three) return '33.33%';\n    if (props.four) return '25%';\n    return '50%';\n  }};\n  padding: ${(props: any) => (props.noPadding ? 0 : '15px')};\n`;\n\nexport const BreakableFlex = styled(Flex)`\n  word-break: break-all;\n`;\n\nexport default Flex;\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport {\n  space,\n  color,\n  layout,\n  typography,\n  flexbox,\n  border,\n  background,\n  shadow,\n  position,\n} from 'styled-system';\n\nconst StyledInput: any = styled.input`\n  border: 1px solid grey;\n  border-radius: 2px;\n  padding: 0.8em;\n  font-size: 0.8em;\n  margin: 1em 0;\n\n  color: black;\n  background-color: #EBEBEB;\n\n  ${space};\n  ${color};\n  ${layout};\n  ${typography};\n  ${flexbox};\n  ${border};\n  ${background}\n  ${shadow};\n  ${position};\n`;\n\nconst TextArea: any = styled.textarea`\n  border: 1px solid grey;\n  border-radius: 2px;\n  padding: 0.8em;\n  font-size: 0.8em;\n  margin: 1em 0;\n\n  color: black;\n  background-color: #EBEBEB;\n\n  ${space};\n  ${color};\n  ${layout};\n  ${typography};\n  ${flexbox};\n  ${border};\n  ${background}\n  ${shadow};\n  ${position};\n`;\n\ninterface Props {\n  type?: string;\n  width?: string;\n  handleChange(value: string): void;\n}\n\nconst Input: any = (props: Props) => {\n  if (props.type === 'textarea') {\n    return <TextArea {...props} onChange={(e: any) => props.handleChange(e.target.value)} />;\n  }\n  return (\n    <StyledInput\n      {...props}\n      type={props.type || 'text'}\n      onChange={(e: any) => props.handleChange(e.target.value)}\n    />\n  );\n};\n\nInput.displayName = 'Input';\n\nexport default Input;\n","import styled from 'styled-components';\nimport { space, color, layout, typography, background, shadow } from 'styled-system';\n\nconst A: any = styled.a`\n  text-decoration: none;\n  color: blue;\n  cursor: pointer;\n\n  &:active,\n  &:focus,\n  &:visited {\n    color: darkblue;\n    transition: color 0.15s ease-in;\n  }\n\n  ${space};\n  ${color};\n  ${layout};\n  ${typography};\n  ${background}\n  ${shadow};\n`;\n\nA.displayName = 'A';\n\nexport default A;\n","import { utils } from 'ethers';\nimport { BigNumberish } from 'ethers/utils';\n\nexport function fromBaseUnits(base: BigNumberish) {\n  return utils.formatUnits(base, 18);\n}\n\nexport function sliceDecimals(floatingPt: string, decimalDigits: number = 3) {\n  const point = floatingPt.indexOf('.');\n  const integer = floatingPt.slice(0, point);\n  const fractional = floatingPt.slice(point, point + decimalDigits);\n  return integer + fractional;\n}\n\nexport function commifyBaseUnits(base: BigNumberish, decimalDigits: number = 3) {\n  return sliceDecimals(utils.commify(fromBaseUnits(base)), decimalDigits);\n}\n\nfunction toSolidityTypes(methodAbi: any[]) {\n  return methodAbi\n    .map((typeAbi: any) => `${typeAbi.type}${typeAbi.name && ` ${typeAbi.name}`}`)\n    .join(', ');\n}\n\nexport function formatMethodTypes(methodAbi: any) {\n  const inputs = toSolidityTypes(methodAbi.inputs);\n  const outputs =\n    methodAbi.outputs && methodAbi.outputs.length > 0\n      ? `: (${toSolidityTypes(methodAbi.outputs)})`\n      : '';\n  const signature = `${methodAbi.name}(${inputs})${outputs}`;\n  return { ...methodAbi, signature };\n}\n\nconst nonNumRegex = /^([^0-9]*)$/;\n\nexport function sanitizeEvents(events) {\n  return events.map(event => {\n    const newValues = Object.keys(event.values).reduce((acc, eventArg) => {\n      let value = event.values[eventArg];\n      if (nonNumRegex.test(eventArg) && eventArg !== 'length') {\n        if (value.hasOwnProperty('_hex')) {\n          value = value.toString();\n        }\n        return {\n          ...acc,\n          [eventArg]: value,\n        };\n      }\n      return acc;\n    }, {});\n\n    return {\n      ...event,\n      values: newValues,\n    };\n  });\n}\n\nexport function stringifySolidityValues(val: any) {\n  if (typeof val === 'object' && val.hasOwnProperty('_hex')) {\n    return val.toString();\n  } else if (typeof val === 'number') {\n    return utils.bigNumberify(val).toString();\n  } else if (typeof val === 'boolean') {\n    if (val) {\n      return 'true';\n    } else {\n      return 'false';\n    }\n  }\n  // TODO: throw\n  return val;\n}\n\nexport function formatTokens(methodName: string, val: string) {\n  if (\n    methodName.includes('balance') ||\n    methodName.includes('tokens') ||\n    methodName.includes('totalsupply')\n  ) {\n    return commifyBaseUnits(val);\n  }\n  return val;\n}\n\nexport function formatUts(methodName: string, val: string) {\n  if (\n    (methodName.includes('date') || methodName.includes('time')) &&\n    !methodName.includes('tokens')\n  ) {\n    return new Date(parseInt(val) * 1000).toLocaleString();\n  }\n  return val;\n}\n","import React, { useState } from 'react';\nimport Box from './system/Box';\nimport A from './ui/A';\nimport { stringifySolidityValues, formatTokens, formatUts } from '../utils/format';\n\nconst VisibleMethods = ({ methods, methodType, contract, contractName, handleHideMethod }: any) => {\n  const [visibility, setVisibility] = useState(false);\n  const [values, setValues]: any = useState({});\n\n  async function handleClick(method: any) {\n    try {\n      const methodName = method.name.toLowerCase();\n      let val = await contract[method.name]();\n      console.log('method.name:', method.name);\n      console.log('typeof val:', typeof val);\n\n      // Stringify objects (BigNumbers), numbers, and booleans\n      val = stringifySolidityValues(val);\n\n      // Convert base units, strip decimals, and format with commas\n      val = formatTokens(methodName, val);\n\n      // Format unix timestamps\n      val = formatUts(methodName, val);\n\n      setValues({\n        ...values,\n        [method.name]: val,\n      });\n    } catch (error) {\n      console.error(`ERROR: ${error.message}`);\n      throw error;\n    }\n  }\n\n  return (\n    <Box mb={2}>\n      <Box mb={0} onClick={() => setVisibility(!visibility)}>\n        {`${methodType} (${methods.length})`}\n      </Box>\n\n      {visibility &&\n        methods.map((method: any) => (\n          <Box mb=\"0.5rem\" key={method.name}>\n            <Box fontSize=\"0.7rem\">\n              {`- `}\n              {method.inputs.length === 0 && method.outputs.length === 1 ? (\n                <A onClick={() => handleClick(method)}>{`${method.signature}`}</A>\n              ) : (\n                method.signature\n              )}\n              . . <A onClick={() => handleHideMethod(method.name, contractName)}>HIDE</A>\n            </Box>\n            <Box>{values[method.name] && values[method.name]}</Box>\n          </Box>\n        ))}\n    </Box>\n  );\n};\n\nexport default VisibleMethods;\n","export const SAVED_ABIS = 'SAVED_ABIS';\nexport const SAVED_HIDDEN_METHODS = 'SAVED_HIDDEN_METHODS';\nexport const SAVED_EVENTS = 'SAVED_EVENTS';\n\nexport const loadState: any = (storageKey: string) => {\n  try {\n    const serializedState = localStorage.getItem(storageKey);\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState: any = (storageKey: string, state: any) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(storageKey, serializedState);\n  } catch (err) {\n    // Ignore write errors.\n  }\n};\n","import React from 'react';\nimport Flex from '../system/Flex';\nimport Input from '../ui/Input';\n\nconst Row = ({ children }: any) => (\n  <Flex width={1} justifyBetween alignCenter>\n    {children}\n  </Flex>\n);\n\nexport const Field = ({ label, value, handleChange, inputComponent }: any) => (\n  <Row>\n    <div>{label}</div>\n    {inputComponent ? (\n      inputComponent\n    ) : (\n      <Input width={0.6} value={value} handleChange={handleChange} />\n    )}\n  </Row>\n);\n","import React, { useState, useEffect } from 'react';\nimport Box from './system/Box';\nimport Flex from './system/Flex';\nimport Button from './ui/Button';\nimport Input from './ui/Input';\nimport VisibleMethods from './VisibleMethods';\nimport { saveState, loadState, SAVED_HIDDEN_METHODS } from '../utils/localStorage';\nimport A from './ui/A';\nimport { Field } from './ui/Field';\nimport { formatMethodTypes } from '../utils/format';\nimport isEmpty from 'lodash/isEmpty';\n\ninterface Props {\n  error: string;\n  setError(err: string): void;\n  localAbis: any;\n  setLocalAbis(localAbis: any): void;\n  contracts: any;\n}\n\nconst Contracts: React.FC<Props> = ({\n  error,\n  setError,\n  localAbis,\n  setLocalAbis,\n  contracts,\n}: Props) => {\n  const [name, setName]: [string, any] = useState('');\n  const [abi, setAbi]: [string, any] = useState('');\n  const [address, setAddress]: [string, any] = useState('');\n  const [hiddenMethods, setHiddenMethods]: [any, any] = useState({});\n\n  function resetForm() {\n    setError('');\n    setName('');\n    setAbi('');\n    setAddress('');\n  }\n\n  useEffect(() => {\n    const savedHiddenMethods = loadState(SAVED_HIDDEN_METHODS);\n    if (savedHiddenMethods) {\n      setHiddenMethods(savedHiddenMethods);\n    }\n  }, []);\n\n  useEffect(() => {\n    const savedHiddenMethods = loadState(SAVED_HIDDEN_METHODS);\n    saveState(SAVED_HIDDEN_METHODS, {\n      ...savedHiddenMethods,\n      ...hiddenMethods,\n    });\n  }, [hiddenMethods]);\n\n  function handleHideMethod(methodName: string, contractName: string) {\n    setHiddenMethods({\n      ...hiddenMethods,\n      [contractName]: {\n        ...hiddenMethods[contractName],\n        [methodName]: true,\n      },\n    });\n  }\n\n  function handleSubmit(e: any) {\n    e.preventDefault();\n    if (typeof abi !== 'undefined') {\n      try {\n        const json = JSON.parse(abi);\n        const newLocalAbis = {\n          ...localAbis,\n          [name]: {\n            abi: json,\n            address: address,\n          },\n        };\n\n        setLocalAbis(newLocalAbis);\n        resetForm();\n      } catch (error) {\n        setError('Invalid JSON abi');\n      }\n    }\n  }\n\n  return (\n    <Box className=\"Contracts\">\n      <Box color=\"red\">{error}</Box>\n\n      <Flex p={4}>\n        <Box width={0.5} mr={4}>\n          {typeof localAbis !== 'undefined' && !isEmpty(localAbis) ? (\n            Object.keys(localAbis).map(contractName => {\n              const { abi: contractAbi, address: contractAddress } = localAbis[contractName];\n              const txsAbi = contractAbi.filter((m: any) => m.type === 'function' && !m.constant);\n              const callsAbi = contractAbi.filter((m: any) => m.type === 'function' && m.constant);\n              const eventsAbi = contractAbi.filter((m: any) => m.type === 'event');\n\n              const txs = txsAbi.map(formatMethodTypes);\n              const calls = callsAbi.map(formatMethodTypes);\n              const events = eventsAbi.map(formatMethodTypes);\n              const visibleCalls = visibilityFilter(calls, hiddenMethods, contractName);\n              const visibleTxs = visibilityFilter(txs, hiddenMethods, contractName);\n              const visibleEvents = visibilityFilter(events, hiddenMethods, contractName);\n\n              return (\n                <Box mb={4} key={contractName}>\n                  <Box mb={1} p={2} fontSize={3} border=\"1px solid black\">\n                    {contractName}\n                  </Box>\n                  <Box p={2} border=\"1px solid black\">\n                    <Box pb={2} fontSize={0}>\n                      Address:{' '}\n                      <A href={`https://etherscan.io/address/${contractAddress}`} target=\"_blank\">\n                        {contractAddress}\n                      </A>\n                    </Box>\n                    <VisibleMethods\n                      methodType=\"Calls\"\n                      methods={visibleCalls}\n                      contract={contracts[contractName]}\n                      contractName={contractName}\n                      handleHideMethod={handleHideMethod}\n                    />\n                    <VisibleMethods\n                      methodType=\"Transactions\"\n                      methods={visibleTxs}\n                      contractName={contractName}\n                      handleHideMethod={handleHideMethod}\n                    />\n                    <VisibleMethods\n                      methodType=\"Events\"\n                      methods={visibleEvents}\n                      contractName={contractName}\n                      handleHideMethod={handleHideMethod}\n                    />\n                  </Box>\n                </Box>\n              );\n            })\n          ) : (\n            <Box>Nothing here. Save a new contract --></Box>\n          )}\n        </Box>\n\n        <Box width={0.5}>\n          <Box fontSize={36} fontWeight=\"bold\" mb={3}>\n            Save new contract\n          </Box>\n          <form onSubmit={handleSubmit}>\n            <Flex column>\n              <Field label=\"Contract name\" value={name} handleChange={setName} />\n              <Field label=\"Contract address\" value={address} handleChange={setAddress} />\n              <Field\n                label=\"Contract ABI\"\n                inputComponent={\n                  <Input\n                    width={0.6}\n                    type=\"textarea\"\n                    rows=\"10\"\n                    cols=\"100\"\n                    value={abi}\n                    handleChange={setAbi}\n                  />\n                }\n              />\n              <Button>Save</Button>\n            </Flex>\n          </form>\n        </Box>\n      </Flex>\n    </Box>\n  );\n};\n\nfunction visibilityFilter(methods: any[], hiddenMethods: any, contractName: string) {\n  return methods.filter(\n    (m: any) => !hiddenMethods[contractName] || !hiddenMethods[contractName].hasOwnProperty(m.name)\n  );\n}\n\nexport default Contracts;\n","import React from 'react';\nimport { ResponsiveSwarmPlot } from '@nivo/swarmplot';\nimport styled from 'styled-components';\nimport { utils } from 'ethers';\nimport { fromBaseUnits } from '../utils/format';\n\nconst Wrapper = styled.div`\n  height: 80vh;\n`;\n\nconst SwarmPlot = ({ events }: any) => {\n  console.log('events:', events);\n\n  const data = events.TokenCapacitor.filter(e => e.name === 'Donation').map(e => {\n    return {\n      id: e.txHash + e.logIndex,\n      group: 'TokenCapacitor',\n      blockNumber: e.blockNumber,\n      numTokens: e.values.numTokens,\n    };\n  });\n\n  // console.log(\"data:\", data);\n  // return null\n\n  const sizes = {\n    sm: 5,\n    md: 10,\n    lg: 20,\n    whale: 30,\n  };\n\n  return (\n    <Wrapper>\n      <ResponsiveSwarmPlot\n        data={data}\n        layout=\"horizontal\"\n        layers={['grid', 'axes', 'nodes', 'mesh', 'annotations']}\n        groups={['Gatekeeper', 'TokenCapacitor', 'ParameterStore']}\n        value=\"blockNumber\"\n        valueScale={{ type: 'linear', min: 8500000, max: 9079928 }}\n        size={({ numTokens }) => {\n          if (utils.bigNumberify(numTokens).lt('250000000000000000000')) {\n            return sizes.sm;\n          }\n          if (utils.bigNumberify(numTokens).lt('600000000000000000000')) {\n            return sizes.md;\n          }\n          if (utils.bigNumberify(numTokens).lt('1200000000000000000000')) {\n            return sizes.lg;\n          }\n          return sizes.whale;\n        }}\n        forceStrength={4}\n        simulationIterations={100}\n        colors={{ scheme: 'nivo' }}\n        borderColor={{\n          from: 'color',\n          modifiers: [\n            ['darker', 0.6],\n            ['opacity', 0.5],\n          ],\n        }}\n        margin={{ top: 80, right: 100, bottom: 80, left: 100 }}\n        axisTop={{\n          orient: 'top',\n          tickSize: 10,\n          tickPadding: 5,\n          tickRotation: 0,\n        }}\n        axisRight={{\n          orient: 'right',\n          tickSize: 10,\n          tickPadding: 5,\n          tickRotation: 0,\n        }}\n        axisBottom={{\n          orient: 'bottom',\n          tickSize: 10,\n          tickPadding: 5,\n          tickRotation: 0,\n        }}\n        axisLeft={{\n          orient: 'left',\n          tickSize: 10,\n          tickPadding: 5,\n          tickRotation: 0,\n        }}\n        motionStiffness={50}\n        motionDamping={10}\n      />\n    </Wrapper>\n  );\n};\n\nexport default SwarmPlot;\n","import React, { useState, useEffect } from 'react';\nimport { EthEvents } from 'eth-events';\n\nimport Box from './system/Box';\nimport Flex from './system/Flex';\nimport { saveState, SAVED_EVENTS, loadState } from '../utils/localStorage';\nimport isEmpty from 'lodash/isEmpty';\nimport sortBy from 'lodash/sortBy';\nimport { sanitizeEvents } from '../utils/format';\nimport SwarmPlot from './SwarmPlot';\n\ninterface Props {\n  error: string;\n  contracts: any;\n}\n\nconst Events: React.FC<Props> = ({ error, contracts }: Props) => {\n  const [contractNames, setContractNames]: [string[], any] = useState([]);\n  const [events, setEvents]: any = useState({\n    // Gatekeeper: [],\n    // TokenCapacitor: [],\n    // ParameterStore: [],\n  });\n\n  async function getEvents() {\n    const gk = contracts.Gatekeeper;\n    const tc = contracts.TokenCapacitor;\n    const ps = contracts.ParameterStore;\n\n    const gatekeeper = {\n      abi: gk.interface.abi,\n      address: gk.address,\n      name: 'Gatekeeper',\n    };\n    const tokenCapacitor = {\n      abi: tc.interface.abi,\n      address: tc.address,\n      name: 'TokenCapacitor',\n    };\n    const parameterStore = {\n      abi: ps.interface.abi,\n      address: ps.address,\n      name: 'ParameterStore',\n    };\n\n    const contractObjects = [gatekeeper, tokenCapacitor, parameterStore];\n    console.log('contractObjects:', contractObjects);\n    const infuraKey = process.env.INFURA_PROJECT_ID;\n    let rpcEndpoint = `https://mainnet.infura.io/v3/${infuraKey}`;\n    if (!infuraKey) {\n      rpcEndpoint = 'https://mainnet.infura.io';\n    }\n    const startBlock = 8392794;\n    const ignore: string[] = [\n      // 'PermissionRequested',\n      // 'SlateCreated',\n      // 'SlateStaked',\n      // 'VotingTokensDeposited',\n    ];\n    const ethEvents = EthEvents(contractObjects, rpcEndpoint, startBlock, ignore);\n\n    const filter = {\n      fromBlock: 8392794,\n      toBlock: 'latest',\n      address: gatekeeper.address,\n      topics: [],\n    };\n\n    const tcFilter = {\n      ...filter,\n      address: tokenCapacitor.address,\n    };\n    const psFilter = {\n      ...filter,\n      address: parameterStore.address,\n    };\n\n    try {\n      const gkEvents = await ethEvents.getEventsByFilter(filter);\n      const tcEvents = await ethEvents.getEventsByFilter(tcFilter);\n      const psEvents = await ethEvents.getEventsByFilter(psFilter);\n      const orderedGk = sortBy(gkEvents, 'blockNumber');\n      const orderedTc = sortBy(tcEvents, 'blockNumber');\n      const orderedPs = sortBy(psEvents, 'blockNumber');\n      // console.log('gkEvents:', gkEvents);\n      // console.log('orderedGk:', orderedGk);\n\n      const cleanGk = sanitizeEvents(orderedGk);\n      const cleanTc = sanitizeEvents(orderedTc);\n      const cleanPs = sanitizeEvents(orderedPs);\n      console.log('cleanTc:', cleanTc);\n\n      setEvents({\n        Gatekeeper: cleanGk,\n        TokenCapacitor: cleanTc,\n        ParameterStore: cleanPs,\n      });\n    } catch (error) {\n      console.error(error);\n      throw error;\n    }\n  }\n\n  // On-load, read events from local storage\n  useEffect(() => {\n    const savedEvents = loadState(SAVED_EVENTS);\n    if (typeof savedEvents !== 'undefined') {\n      setEvents(savedEvents);\n    }\n  }, []);\n\n  // If contracts change, get new events from chain\n  // note: only if\n  useEffect(() => {\n    if (!isEmpty(contracts)) {\n      const contractNames = Object.keys(contracts);\n      setContractNames(contractNames);\n\n      const savedEvents = loadState(SAVED_EVENTS);\n      if (isEmpty(savedEvents)) {\n        getEvents();\n      }\n    }\n  }, [contracts]);\n\n  // Save newly retrieved events to local storage\n  useEffect(() => {\n    const savedEvents = loadState(SAVED_EVENTS);\n    if (!isEmpty(events) && !isEmpty(events.Gatekeeper)) {\n      saveState(SAVED_EVENTS, events);\n    }\n  }, [events]);\n\n  return (\n    <Box className=\"Events\">\n      <Box color=\"red\">{error}</Box>\n\n      {!isEmpty(events) && <SwarmPlot events={events} />}\n\n      <Flex p={4}>\n        <Box width={1}>\n          <Box fontSize={36} fontWeight=\"bold\" mb={3}>\n            Events\n          </Box>\n          <Flex>\n            {contractNames.map((contractName: string) => (\n              <div key={contractName}>{contractName}</div>\n            ))}\n          </Flex>\n        </Box>\n\n        <Box>\n          {/* {typeof events.TokenCapacitor !== 'undefined' &&\n            events.TokenCapacitor.map((ev: any) => (\n              <Box key={ev.txHash + ev.logIndex}>\n                <DisplayJSON data={ev} />\n              </Box>\n            ))} */}\n        </Box>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Events;\n","import React, { useState, useEffect } from 'react';\nimport { providers, Contract } from 'ethers';\nimport isEmpty from 'lodash/isEmpty';\nimport './App.css';\nimport Box from './components/system/Box';\nimport Button from './components/ui/Button';\nimport Contracts from './components/Contracts';\nimport Events from './components/Events';\nimport Flex from './components/system/Flex';\nimport { loadState, SAVED_ABIS, saveState } from './utils/localStorage';\n\ndeclare global {\n  interface Window {\n    ethereum: any;\n  }\n}\n\nconst App: React.FC = () => {\n  const [localAbis, setLocalAbis]: any = useState({});\n  const [contracts, setContracts]: any = useState({});\n  const [route, setRoute] = useState('Contracts');\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const persisted = loadState(SAVED_ABIS);\n    if (\n      typeof persisted !== 'undefined' &&\n      typeof window !== 'undefined' &&\n      typeof window.ethereum !== 'undefined'\n    ) {\n      const provider = new providers.Web3Provider(window.ethereum);\n      const cons = Object.keys(persisted).reduce((acc: any, val: string) => {\n        if (!acc[val]) {\n          const abi = persisted[val];\n          return {\n            ...acc,\n            [val]: new Contract(abi.address, abi.abi, provider.getSigner()),\n          };\n        }\n        return acc;\n      }, {});\n      setContracts(cons);\n      setLocalAbis(persisted);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(localAbis)) {\n      console.log('localAbis:', localAbis);\n      const persisted = loadState(SAVED_ABIS);\n      saveState(SAVED_ABIS, {\n        ...persisted,\n        ...localAbis,\n      });\n    }\n  }, [localAbis]);\n\n  return (\n    <Box className=\"App\">\n      <Flex p={'2rem 0 0 2rem'}>\n        <Button\n          bg={route === 'Contracts' ? '#96FF64' : 'white'}\n          mr={4}\n          onClick={() => setRoute('Contracts')}\n        >\n          Contracts\n        </Button>\n        <Button bg={route === 'Events' ? '#96FF64' : 'white'} onClick={() => setRoute('Events')}>\n          Events\n        </Button>\n      </Flex>\n\n      {route === 'Contracts' ? (\n        <Contracts\n          error={error}\n          setError={setError}\n          localAbis={localAbis}\n          setLocalAbis={setLocalAbis}\n          contracts={contracts}\n        />\n      ) : route === 'Events' ? (\n        <Events error={error} contracts={contracts} />\n      ) : null}\n    </Box>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}